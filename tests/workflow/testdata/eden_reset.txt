[!exec:bash] stop
[!exec:wc] stop

eden eve reset
stdout 'reset done'

exec bash chk_pods.sh
stdout '^\s*1\s*$'

exec bash chk_nets.sh
stdout '^\s*1\s*$'

exec bash chk_vols.sh
stdout '^\s*1\s*$'

-- chk_pods.sh --
#!/bin/bash

EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
for i in `seq 30`
do
    echo Step $i pod ps
    test `$EDEN pod ps | wc -l` -gt 1 || break
    sleep 10
done

$EDEN pod ps | wc -l

-- chk_nets.sh --
#!/bin/bash

EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
for i in `seq 30`
do
    echo Step $i network ls
    test `$EDEN network ls | wc -l` -gt 1 || break
    sleep 10
done

$EDEN network ls | wc -l

-- chk_vols.sh --
#!/bin/bash

EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
for i in `seq 30`
do
    echo Step $i volume ls
    test `$EDEN volume ls | wc -l` -gt 1 || break
    sleep 10
done

$EDEN volume ls | wc -l

-- eden-config.yml --
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}
