# Number of tests
{{$tests := 37}}
# EDEN_TEST env. var. -- flavour of test set: "small", "medium"(default) and "large"
{{$workflow := EdenGetEnv "EDEN_TEST"}}
# EDEN_TEST_SETUP env. var. -- "y"(default) performs the EDEN setup steps
{{$setup := EdenGetEnv "EDEN_TEST_SETUP"}}
# EDEN_TEST_STOP -- "y" stops EDEN after tests ("n" by default)
{{$stop := EdenGetEnv "EDEN_TEST_STOP"}}
# EDEN_TEST_USB_PT -- "y" enables USB Passthrough test (disabled by default).
{{$usb_pt := EdenGetEnv "EDEN_TEST_USB_PT"}}
# EDEN_TEST_AUDIO_PT -- "y" enables Audio Passthrough test (disabled by default).
{{$audio_pt := EdenGetEnv "EDEN_TEST_AUDIO_PT"}}
# EDEN_TEST_ETH_PT -- "y" enables Ethernet Passthrough test (disabled by default).
{{$eth_pt := EdenGetEnv "EDEN_TEST_ETH_PT"}}
# EDEN_TEST_REGISTRY env. var. -- "y"(default) performs the local EDEN registry test
{{$registry := EdenGetEnv "EDEN_TEST_REGISTRY"}}

{{$devmodel := EdenConfig "eve.devmodel"}}

{{if (ne $setup "n")}}
#./eden config add default
/bin/echo Eden setup (01/{{$tests}})
eden.escript.test -test.run TestEdenScripts/eden_setup
#source ~/.eden/activate.sh
{{end}}

# Making some settings for test configuration if we work with QEMU
{{if and (eq $usb_pt "y") (eq $devmodel "ZedVirtual-4G") }}
qemu+usb.sh
{{end}}
{{if and (eq $audio_pt "y") (eq $devmodel "ZedVirtual-4G") }}
qemu+audio.sh
{{end}}
{{if or (eq $devmodel "ZedVirtual-4G") (eq $devmodel "VBox") (eq $devmodel "parallels") }}
eden+ports.sh 2223:2223 2224:2224 5912:5902 5911:5901 8027:8027 8028:8028 8029:8029 8030:8030 8031:8031
{{end}}

{{if (ne $setup "n")}}
/bin/echo Eden start (02/{{$tests}})
eden.escript.test -test.run TestEdenScripts/eden_start
/bin/echo Eden onboard (03/{{$tests}})
eden.escript.test -test.run TestEdenScripts/eden_onboard
{{end}}

{{if (ne $setup "y")}}
# Just restart EVE if not using the SETUP steps
# Is it QEMU?
{{if or (eq $devmodel "ZedVirtual-4G") (eq $devmodel "VBox") (eq $devmodel "parallels") }}
/bin/echo EVE restart (04/{{$tests}})
eden.escript.test -test.run TestEdenScripts/eve_restart
{{end}}
{{end}}

/bin/echo Eden Log test (05/{{$tests}})
eden.escript.test -testdata ../lim/testdata/ -test.run TestEdenScripts/log_test
/bin/echo Eden SSH test (06/{{$tests}})
eden.escript.test -test.run TestEdenScripts/ssh
{{ if or (eq $workflow "large") (eq $workflow "gcp") }}
/bin/echo Eden Info test (07/{{$tests}})
eden.escript.test -testdata ../lim/testdata/ -test.run TestEdenScripts/info_test
{{end}}
/bin/echo Eden Metric test (08/{{$tests}})
eden.escript.test -testdata ../lim/testdata/ -test.run TestEdenScripts/metric_test

/bin/echo Escript args test (09/{{$tests}})
eden.escript.test -testdata ../escript/testdata/ -test.run TestEdenScripts/arg -args=test1=123,test2=456
/bin/echo Escript template test (10/{{$tests}})
eden.escript.test -testdata ../escript/testdata/ -test.run TestEdenScripts/template
/bin/echo Escript message test (11/{{$tests}})
eden.escript.test -testdata ../escript/testdata/ -test.run TestEdenScripts/message
/bin/echo Escript nested scripts test (12/{{$tests}})
eden.escript.test -testdata ../escript/testdata/ -test.run TestEdenScripts/nested_scripts
/bin/echo Escript time test (13/{{$tests}})
eden.escript.test -testdata ../escript/testdata/ -test.run TestEdenScripts/time
/bin/echo Escript source test (14/{{$tests}})
eden.escript.test -testdata ../escript/testdata/ -test.run TestEdenScripts/source
/bin/echo Escript fail scenario test (15/{{$tests}})
eden.escript.test -testdata ../escript/testdata/ -test.run TestEdenScripts/fail_scenario

/bin/echo Eden basic network test (16/{{$tests}})
eden.escript.test -testdata ../network/testdata/ -test.run TestEdenScripts/network_test
/bin/echo Eden basic VLAN test (16.1/{{$tests}})
eden.escript.test -testdata ../network/testdata/ -test.run TestEdenScripts/vlans
/bin/echo Eden basic volumes test (17.1/{{$tests}})
eden.escript.test -testdata ../volume/testdata/ -test.run TestEdenScripts/volumes_test
/bin/echo Eden sftp volumes test (17.2/{{$tests}})
eden.escript.test -testdata ../volume/testdata/ -test.run TestEdenScripts/volume_sftp
{{if (ne $registry "n")}}
/bin/echo Eden eclient with mounted volume (17.3/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/mount
{{end}}

/bin/echo Eden Host only ACL (18.1/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/host-only
/bin/echo Eden ACL to particular host (18.2/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/acl
/bin/echo Eden profile test (18.3/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/profile
/bin/echo Eden Network light (19/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/networking_light
/bin/echo Eden Networks switch (20/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/nw_switch
/bin/echo Eden Network Ports switch (21/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/port_switch
/bin/echo Eden Network portmap test (21.1/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/port_forward

{{if (eq $usb_pt "y")}}
/bin/echo Hardware reboot - USB (22/{{$tests}})
eden.escript.test -testdata ../hardware_reboot/testdata/ -test.run TestEdenScripts/hardware_usb_reboot
{{end}}
{{if (eq $audio_pt "y")}}
/bin/echo Hardware reboot - Audio (22.1/{{$tests}})
eden.escript.test -testdata ../hardware_reboot/testdata/ -test.run TestEdenScripts/hardware_audio_reboot
{{end}}
{{if (eq $eth_pt "y")}}
/bin/echo Hardware reboot - Ethernet (22.2/{{$tests}})
eden.escript.test -testdata ../hardware_reboot/testdata/ -test.run TestEdenScripts/hardware_eth_reboot
{{end}}

{{ if or (eq $workflow "large") (eq $workflow "gcp") }}
/bin/echo Eden VNC (23/{{$tests}})
eden.escript.test -testdata ../vnc/testdata/ -test.run TestEdenScripts/vnc_test

{{if (ne $registry "n")}}
/bin/echo Eden registry (24/{{$tests}})
eden.escript.test -testdata ../registry/testdata/ -test.run TestEdenScripts/registry_test
{{end}}

/bin/echo Eden Networking via switch test (25/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/air-gapped-switch
/bin/echo Eden 2 dockers test (26/{{$tests}})
eden.escript.test -testdata ../docker/testdata/ -test.run TestEdenScripts/2dockers_test
/bin/echo Eden 2 dockers test with app state detector (27/{{$tests}})
eden.escript.test -testdata ../app/testdata/ -test.run TestEdenScripts/2dockers_test
/bin/echo Eden Nginx (28/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/ngnix
/bin/echo Eden Mariadb (29/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/maridb
/bin/echo Eden eclient with disk (30/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/disk
/bin/echo EVE reset (31/{{$tests}})
eden.escript.test -test.run TestEdenScripts/eden_reset
{{end}}
{{ if  (eq $workflow "large")  }}
/bin/echo Verifying that we can use a switch network instance on a management port (32/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/app_nonat
/bin/echo Eden's testing the maximum application limit (33/{{$tests}})
eden.escript.test -testdata ../eclient/testdata/ -test.run TestEdenScripts/eclients
{{end}}

/bin/echo Eden Reboot test (34/{{$tests}})
eden.escript.test -test.run TestEdenScripts/reboot_test
{{ if ne $workflow "small" }}
/bin/echo Eden base OS update http (35/{{$tests}})
eden.escript.test -testdata ../update_eve_image/testdata/ -test.run TestEdenScripts/update_eve_image_http
/bin/echo Eden base OS update oci (36/{{$tests}})
eden.escript.test -testdata ../update_eve_image/testdata/ -test.run TestEdenScripts/update_eve_image_oci
{{end}}

{{if (eq $stop "y")}}
/bin/echo Eden stop (37/{{$tests}})
eden.escript.test -test.run TestEdenScripts/eden_stop
{{end}}
