[!exec:bash] stop
[!exec:grep] stop
[!exec:cat] stop
[!exec:curl] stop

exec docker run  --name azure_iot  dautovri/eden-azure-iot-test
exec docker cp  azure_iot:/disk  disk/
exec docker rm -f azure_iot

eden -t 10m pod deploy file://disk/Ubuntu-18.04-bionic --disks=file://disk/Ubuntu-18.04-bionic-1 --disks=file://disk/Ubuntu-18.04-bionic-2 --disks=file://disk/Ubuntu-18.04-bionic-3 -n azureiot --memory 3GB -v debug
test eden.app.test -test.v -timewait 20m RUNNING azureiot

# Wait results
exec -t 15m bash get.sh azureiot

# Teardown applications
eden pod delete azureiot

# Test's config file
-- eden-config.yml --
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}


-- get.sh --
#!/bin/sh
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}

echo "Waiting for the test results"
until "$EDEN" pod logs --fields=app --format=json azureiot | grep 'Ubuntu 18.04.5 LTS Azure-IoT-Edge'; do sleep 30; done