# Test host-only ACL application isolation

{{$test_msg := "This is a test"}}
{{define "ssh"}}ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -o PasswordAuthentication=no -i {{EdenConfig "eden.tests"}}/eclient/image/cert/id_rsa root@{{end}}

[!exec:bash] stop
[!exec:sleep] stop
[!exec:ssh] stop
[!exec:chmod] stop

exec chmod 600 {{EdenConfig "eden.tests"}}/eclient/image/cert/id_rsa

# Starting of reboot detector with a 1 reboot limit
! test eden.reboot.test -test.v -timewait 40m -reboot=0 -count=1 &

eden pod deploy -n ping-nw --memory=512MB docker://itmoeve/eclient:0.4 -p 2223:22
eden pod deploy -n ping-fw --memory=512MB docker://itmoeve/eclient:0.4 -p 2224:22 --only-host=true
eden pod deploy -n pong --memory=512MB docker://itmoeve/eclient:0.4

test eden.app.test -test.v -timewait 25m RUNNING ping-nw ping-fw pong

exec -t 20m bash wait_ssh.sh 2223 2224

eden pod ps
cp stdout pod_ps
exec bash pong_ip.sh

exec sleep 10
exec -t 1m bash ping.sh 2223
stdout '0% packet loss'
! exec -t 1m bash ping.sh 2224
stdout '100% packet loss'

eden pod delete ping-nw
eden pod delete ping-fw
eden pod delete pong

test eden.app.test -test.v -timewait 10m - ping-nw ping-fw pong

-- wait_ssh.sh --

EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
HOST=$($EDEN eve ip)
for p in $*
do
  for i in `seq 20`
  do
    sleep 20
    # Test SSH-access to container
    echo {{template "ssh"}}$HOST -p $p grep -q Ubuntu /etc/issue
    {{template "ssh"}}$HOST -p $p grep -q Ubuntu /etc/issue && break
  done
done

-- pong_ip.sh --
echo export PONG_IP=$(grep '^ *pong\s' pod_ps | cut -f 4) > env
cat env

-- ping.sh --
. ./env

EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
HOST=$($EDEN eve ip)

echo {{template "ssh"}}$HOST -p $1 ping -c 5 "$PONG_IP"
{{template "ssh"}}$HOST -p $1 ping -c 5 "$PONG_IP"

-- eden-config.yml --
{{/* Test's config. file */}}
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}
