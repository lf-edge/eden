# Simple test of standard `nodered` image

{{define "test_msg"}}Node-RED{{end}}
{{define "port"}}2223{{end}}

[!exec:bash] stop
[!exec:sleep] stop
[!exec:curl] stop

# Starting of reboot detector with a 1 reboot limit
! test eden.reboot.test -test.v -timewait=0 -reboot=0 -count=1 &

eden pod deploy -n nodered docker://nodered/node-red:2.1.3 -p {{template "port"}}:1880

test eden.app.test -test.v -timewait 25m RUNNING nodered

exec -t 10m bash wait_curl.sh

stdout {{template "test_msg"}}

eden pod delete nodered

test eden.app.test -test.v -timewait 10m - nodered

-- wait_curl.sh --
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}

echo $EDEN sdn fwd eth0 {{template "port"}} -- curl FWD_IP:FWD_PORT
until $EDEN sdn fwd eth0 {{template "port"}} -- curl FWD_IP:FWD_PORT | grep {{template "test_msg"}}; do sleep 5; done

-- eden-config.yml --
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}
