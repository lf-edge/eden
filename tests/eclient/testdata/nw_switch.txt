# Test for applications network connectivity switching

{{$test_msg := "This is a test"}}
{{define "ssh"}}ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i {{EdenConfig "eden.tests"}}/eclient/image/cert/id_rsa root@FWD_IP -p FWD_PORT{{end}}
{{define "eclient_image"}}docker://{{EdenConfig "eden.eclient.image"}}:{{EdenConfig "eden.eclient.tag"}}{{end}}

[!exec:bash] stop
[!exec:sleep] stop
[!exec:ssh] stop
[!exec:chmod] stop

exec chmod 600 {{EdenConfig "eden.tests"}}/eclient/image/cert/id_rsa

# Starting of reboot detector with 1 reboots limit
! test eden.reboot.test -test.v -timewait=0 -reboot=0 -count=1 &

message 'Resetting of EVE'
eden eve reset
exec sleep 30

message 'Creating networks'
#exec sleep 5
eden network create 10.11.12.0/24 -n n1
#exec sleep 5
eden network create 10.11.13.0/24 -n n2

test eden.network.test -test.v -timewait 10m ACTIVATED n1 n2

message 'Starting applications'
eden pod deploy -v debug -n ping1 {{template "eclient_image"}} -p 2223:22 --networks=n1 --memory=512MB
eden pod deploy -v debug -n ping2 {{template "eclient_image"}} -p 2224:22 --networks=n2 --memory=512MB
eden pod deploy -v debug -n pong {{template "eclient_image"}} --networks=n1 --memory=512MB

message 'Waiting of running'
test eden.app.test -test.v -timewait 20m RUNNING ping1 ping2 pong

message 'Getting "pong" IP'
exec sleep 5
eden pod ps
cp stdout pod_ps
exec bash pong_ip.sh

message 'Checking accessibility'
exec -t 5m bash wait_ssh.sh 2223 2224

message 'Testing of 1st network'
exec sleep 20
exec -t 1m bash ping.sh 2223
stdout '0% packet loss'
! exec -t 1m bash ping.sh 2224
stdout '100% packet loss'

message 'Switching to 2nd network'
eden pod modify pong --networks n2
test eden.app.test -test.v -timewait 15m RUNNING pong

message 'Getting new "pong" IP'
exec sleep 5
eden pod ps
cp stdout pod_ps
exec bash pong_ip.sh
exec -t 5m bash wait_ssh.sh 2223 2224

message 'Testing of 2nd network'
exec sleep 20
! exec -t 1m bash ping.sh 2223
stdout '100% packet loss'
exec -t 1m bash ping.sh 2224
stdout '0% packet loss'

message 'Switching back to 1st network'
eden pod modify pong --networks n1
test eden.app.test -test.v -timewait 15m RUNNING pong

message 'Getting new "pong" IP'
exec sleep 5
eden pod ps
cp stdout pod_ps
exec bash pong_ip.sh

message 'Testing of 1st network again'
exec sleep 20
exec -t 1m bash ping.sh 2223
stdout '0% packet loss'
! exec -t 1m bash ping.sh 2224
stdout '100% packet loss'
exec -t 5m bash wait_ssh.sh 2223 2224

message 'Resource cleanup'
eden pod delete ping1
eden pod delete ping2
eden pod delete pong

test eden.app.test -test.v -timewait 10m - ping-nw ping-fw pong

eden network delete n1
eden network delete n2

test eden.network.test -test.v -timewait 10m - n1 n2

stdout 'no network with n1 found'
stdout 'no network with n2 found'

eden network ls
! stdout '^n1\s'
! stdout '^n2\s'

-- wait_ssh.sh --
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}

for p in $*
do
  for i in `seq 20`
  do
    sleep 20
    # Test SSH-access to container
    echo $EDEN sdn fwd eth0 $p -- {{template "ssh"}} grep -q Ubuntu /etc/issue
    $EDEN sdn fwd eth0 $p -- {{template "ssh"}} grep -q Ubuntu /etc/issue && break
  done
done

-- pong_ip.sh --
echo export PONG_IP=$(grep '^ *pong\s' pod_ps | cut -f 4) > env
cat env

-- ping.sh --
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}

. ./env

echo $EDEN sdn fwd eth0 $1 -- {{template "ssh"}} ping -c 5 "$PONG_IP"
$EDEN sdn fwd eth0 $1 -- {{template "ssh"}} ping -c 5 "$PONG_IP"

-- eden-config.yml --
{{/* Test's config. file */}}
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}
