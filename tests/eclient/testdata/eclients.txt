# Apps deployment stress test

{{$port := "2222"}}
{{$test_opts := "-test.v -timewait 20m"}}
# Number of apps
{{$apps := EdenGetEnv "EDEN_TEST_APPS"}}
# Time of app waiting (default -- 30 min)
{{$time := EdenGetEnv "EDEN_TEST_TIME"}}
# Image for app (default -- docker://itmoeve/eclient:0.4)
{{$img := EdenGetEnv "EDEN_TEST_IMG"}}

{{$devmodel := EdenConfig "eve.devmodel"}}

# Run test if EDEN_TEST_APPS > 0
{{if (gt $apps "0")}}

[!exec:bash] stop
[!exec:sleep] stop
[!exec:ssh] stop
[!exec:chmod] stop

exec chmod 600 {{EdenConfig "eden.tests"}}/eclient/image/cert/id_rsa

# Starting of reboot detector with a 2 reboot limit
# Default time -- 30m
! test eden.reboot.test -test.v -timewait {{if $time}}{{$time}}{{else}}30m{{end}} -reboot=0 -count=2 &

# Default time -- 30m
exec -t {{if $time}}{{$time}}{{else}}30m{{end}} bash ssh.sh

# Default time -- 30m
exec -t {{if $time}}{{$time}}{{else}}30m{{end}} bash clean.sh

-- eden-config.yml --
{{/* Test's config. file */}}
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}

-- ssh.sh --
# Start apps and check connectivity

EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}" --config $EDEN_CONFIG"
TAPP={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/eden.app.test
HOST=$($EDEN eve ip)

APPS="{{$apps}}"
# Default image -- docker://itmoeve/eclient:0.4
IMG="{{if $img}}{{$img}}{{else}}docker://itmoeve/eclient:0.4{{end}}"

PORTS=""
for i in `seq $APPS`
do
 PORTS="$PORTS $(({{$port}}+$i)):$(({{$port}}+$i))"
done

# Is it QEMU?
{{if (eq $devmodel "ZedVirtual-4G")}}
echo {{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/eden+ports.sh $PORTS
{{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/eden+ports.sh $PORTS

# Restarting EVE to confirm configuration changes
$EDEN test {{EdenConfig "eden.tests"}}/workflow/ -e eve_restart
{{end}}

PODS=""
for i in `seq $APPS`
do
 echo $EDEN pod deploy -n eclient$i --memory=512MB $IMG -p $(({{$port}}+$i)):22
 $EDEN pod deploy -n eclient$i --memory=512MB $IMG -p $(({{$port}}+$i)):22
 echo $TAPP -test.v -timewait 20m RUNNING eclient$i
 $TAPP -test.v -timewait 20m RUNNING eclient$i

 sleep 20

check() {
  # Test SSH-access to container
  echo $1\) ssh -o ConnectTimeout=10 -oStrictHostKeyChecking=no -o PasswordAuthentication=no -i {{EdenConfig "eden.root"}}/../tests/eclient/image/cert/id_rsa -p $(({{$port}}+$1)) root@$HOST grep Ubuntu /etc/issue
  ssh -o ConnectTimeout=10 -oStrictHostKeyChecking=no -o PasswordAuthentication=no -i {{EdenConfig "eden.root"}}/../tests/eclient/image/cert/id_rsa -p $(({{$port}}+$1)) root@$HOST grep Ubuntu /etc/issue
}

end () {
 echo "Can't connect to $1"
 exit -1
}

# Wait connection to new app
 for j in `seq 20`
 do
  check $j && break
 done

# Checking connection to all running apps
 for j in `seq $i`
 do
  check $j || end $(({{$port}}+$j))
 done
done

-- clean.sh --
# Clean all apps

EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}" --config $EDEN_CONFIG"
TAPP={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/eden.app.test
HOST=$($EDEN eve ip)

APPS="{{$apps}}"
# Default image -- docker://itmoeve/eclient:0.4
#IMG="{{if $img}}{{$img}}{{else}}docker://itmoeve/eclient:0.4{{end}}"
IMG="{{if $img}}{{$img}}{{else}}docker://itmoeve/eclient:0.4{{end}}"

PODS=""
for i in `seq $APPS`
do
 PODS="$PODS eclient$i"
 echo $EDEN pod delete eclient$i
 $EDEN pod delete eclient$i
done

echo $TAPP -test.v -timewait 20m - $PODS
$TAPP -test.v -timewait 20m - $PODS

PORTS=""
for i in `seq $APPS`
do
 PORTS="$PORTS $(({{$port}}+$i)):$(({{$port}}+$i))"
done

# Is it QEMU?
{{if (eq $devmodel "ZedVirtual-4G")}}
echo {{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/eden-ports.sh $PORTS
{{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/eden-ports.sh $PORTS

# Restarting EVE to confirm configuration changes
$EDEN test {{EdenConfig "eden.tests"}}/workflow/ -e eve_restart
{{end}}

{{end}}
