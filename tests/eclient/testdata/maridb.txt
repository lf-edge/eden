# Simple test of standard `mariadb` image

{{$server := "mariadb"}}
{{$test_msg := "MariaDB [(none)]> "}}
{{define "port"}}2223{{end}}
{{define "ssh"}}ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -o PasswordAuthentication=no -i {{EdenConfig "eden.tests"}}/eclient/image/cert/id_rsa root@FWD_IP -p FWD_PORT{{end}}
{{define "eclient_image"}}docker://{{EdenConfig "eden.eclient.image"}}:{{EdenConfig "eden.eclient.tag"}}{{end}}

[!exec:bash] stop
[!exec:sleep] stop
[!exec:ssh] stop
[!exec:chmod] stop

# MariaDB crashes when run as a native container.
# Most likely it expects some elevated privileges which bare containers do not have.
exec -t 2m bash check_vm_support.sh
source .env
[!env:with_hw_virt] skip 'Missing HW-assisted virtualization capability'

exec chmod 600 {{EdenConfig "eden.tests"}}/eclient/image/cert/id_rsa

# Starting of reboot detector with a 1 reboot limit
#! test eden.reboot.test -test.v -timewait=0 -reboot=0 -count=1 &

eden pod deploy -n eclient --memory=512MB {{template "eclient_image"}} -p {{template "port"}}:22

eden pod deploy -n {{$server}} --cpus=2 --memory=1024MB docker://mariadb:10.8.3 --volume-size=2GB --metadata='MYSQL_ROOT_PASSWORD=adam&eve\nMYSQL_DATABASE=sbtest'

test eden.app.test -test.v -timewait 20m RUNNING eclient {{$server}}

exec -t 20m bash wait_ssh.sh

eden pod ps
cp stdout pod_ps
exec bash server_ip.sh {{$server}}

exec sleep 10
exec -t 10m bash wait_db.sh
exec -t 1m bash run_client.sh
cmp out mariadb.out

exec -t 10m bash sysbench-read.sh
stdout 'statistics'

exec -t 10m bash sysbench-read-write.sh
stdout 'statistics'

eden pod delete eclient
eden pod delete {{$server}}

test eden.app.test -test.v -timewait 10m - eclient {{$server}}

-- check_vm_support.sh --
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}

:>.env
while true;
do
    virt=$($EDEN info --out InfoContent.dinfo.Capabilities.HWAssistedVirtualization | tail -n 1)
    if [ -z "$virt" ]; then
        sleep 3
        continue
    fi
    [ "$virt" == "true" ] && echo "with_hw_virt=true" >>.env
    break
done

-- wait_ssh.sh --
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
for i in `seq 20`
do
  sleep 20
  # Test SSH-access to container
  echo $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} grep -q Ubuntu /etc/issue
  $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} grep -q Ubuntu /etc/issue && break
done

-- server_ip.sh --
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
echo export ESERVER_IP=$(grep "^$1\s" pod_ps | awk '{print $4}') > env

-- wait_db.sh --
. ./env
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}

until $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "echo 'SHOW DATABASES;' | mysql --user=root --password='adam&eve' --host=$ESERVER_IP"
do
   sleep 10
done

-- run_client.sh --
. ./env
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}

echo $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} 'cat > /tmp/mariadb.sql' < mariadb.in
$EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} 'cat > /tmp/mariadb.sql' < mariadb.in
sleep 10
echo $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "mysql --user=root --password='adam&eve' --host=$ESERVER_IP < /tmp/mariadb.sql > /tmp/mariadb.out"
$EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "mysql --user=root --password='adam&eve' --host=$ESERVER_IP < /tmp/mariadb.sql > /tmp/mariadb.out"
sleep 10
echo $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} 'cat /tmp/mariadb.out'
$EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} 'cat /tmp/mariadb.out' > out

-- sysbench-read.sh --
. ./env
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}

BENCH_OPTS="/usr/share/sysbench/oltp_read_only.lua --threads=2 --tables=5 --table-size=100000"
DRIVER_OPTS="--mysql-host=$ESERVER_IP --mysql-user=root --mysql-password='adam&eve' --mysql-port=3306"
OPTS="$BENCH_OPTS $DRIVER_OPTS"

echo $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS prepare"
$EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS prepare"

echo $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS --range_selects=off --db-ps-mode=disable run"
$EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS --range_selects=off --db-ps-mode=disable run"

echo $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS --range_selects=off --db-ps-mode=disable cleanup"
$EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS --range_selects=off --db-ps-mode=disable cleanup"

-- sysbench-read-write.sh --
. ./env
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}

BENCH_OPTS="/usr/share/sysbench/oltp_read_write.lua --threads=2 --tables=5 --table-size=100000"
DRIVER_OPTS="--mysql-host=$ESERVER_IP --mysql-user=root --mysql-password='adam&eve' --mysql-port=3306"
OPTS="$BENCH_OPTS $DRIVER_OPTS"

echo $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS prepare"
$EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS prepare"

echo $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS --delete_inserts=10 --index_updates=10 --non_index_updates=10 --db-ps-mode=disable run"
$EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS --delete_inserts=10 --index_updates=10 --non_index_updates=10 --db-ps-mode=disable run"

echo $EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS --delete_inserts=10 --index_updates=10 --non_index_updates=10 --db-ps-mode=disable cleanup"
$EDEN sdn fwd eth0 {{template "port"}} -- {{template "ssh"}} "sysbench $OPTS --delete_inserts=10 --index_updates=10 --non_index_updates=10 --db-ps-mode=disable cleanup"

-- mariadb.in --
CREATE DATABASE bookstore;

USE bookstore;

CREATE TABLE books (
isbn CHAR(20) PRIMARY KEY, 
title VARCHAR(50),
author_id INT,
publisher_id INT,
year_pub CHAR(4),
description TEXT );

DESCRIBE books;

CREATE TABLE authors
(author_id INT AUTO_INCREMENT PRIMARY KEY,
name_last VARCHAR(50),
name_first VARCHAR(50),
country VARCHAR(50) );

INSERT INTO authors
(name_last, name_first, country)
VALUES('Kafka', 'Franz', 'Czech Republic');

INSERT INTO books
(title, author_id, isbn, year_pub)
VALUES('The Castle', '1', '0805211063', '1998');

INSERT INTO books
(title, author_id, isbn, year_pub)
VALUES('The Trial', '1', '0805210407', '1995'),
('The Metamorphosis', '1', '0553213695', '1995'),
('America', '1', '0805210644', '1995');

SELECT title
FROM books;

SELECT title
FROM books
LIMIT 5;

SELECT title, name_last 
FROM books 
JOIN authors USING (author_id);

SELECT title AS 'Kafka Books'
FROM books 
JOIN authors USING (author_id)
WHERE name_last = 'Kafka';

UPDATE books
SET title = 'Amerika'
WHERE isbn = '0805210644';

DELETE FROM books
WHERE author_id = '2034';

-- mariadb.out --
Field	Type	Null	Key	Default	Extra
isbn	char(20)	NO	PRI	NULL	
title	varchar(50)	YES		NULL	
author_id	int(11)	YES		NULL	
publisher_id	int(11)	YES		NULL	
year_pub	char(4)	YES		NULL	
description	text	YES		NULL	
title
The Metamorphosis
The Trial
America
The Castle
title
The Metamorphosis
The Trial
America
The Castle
title	name_last
The Metamorphosis	Kafka
The Trial	Kafka
America	Kafka
The Castle	Kafka
Kafka Books
The Metamorphosis
The Trial
America
The Castle
-- eden-config.yml --
{{/* Test's config. file */}}
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}
