# Simple test of standard `nginx` image

{{$server := "ngnix"}}
{{$test_msg := "Welcome to nginx!"}}
{{define "port"}}2223{{end}}
{{define "ssh"}}ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -o PasswordAuthentication=no -i {{EdenConfig "eden.tests"}}/eclient/image/cert/id_rsa -p {{template "port"}} root@{{end}}

[!exec:bash] stop
[!exec:sleep] stop
[!exec:ssh] stop
[!exec:chmod] stop

exec chmod 600 {{EdenConfig "eden.tests"}}/eclient/image/cert/id_rsa

# Starting of reboot detector with a 2 reboot limit
! test eden.reboot.test -test.v -timewait 10m -reboot=0 -count=2 &

eden pod deploy -n eclient --memory=512MB docker://itmoeve/eclient:0.4 -p {{template "port"}}:22

eden pod deploy -n {{$server}} --memory=512MB docker://nginx:latest

test eden.app.test -test.v -timewait 20m RUNNING eclient {{$server}}

exec -t 20m bash wait_ssh.sh

eden pod ps
cp stdout pod_ps
exec bash server_ip.sh {{$server}}

exec sleep 10
exec -t 1m bash run_client.sh
stdout '{{$test_msg}}'

eden pod delete eclient
eden pod delete {{$server}}

test eden.app.test -test.v -timewait 10m - eclient {{$server}}

-- wait_ssh.sh --
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
HOST=$($EDEN eve ip)

for i in `seq 20`
do
  sleep 20
  # Test SSH-access to container
  echo {{template "ssh"}}$HOST grep -q Ubuntu /etc/issue
  {{template "ssh"}}$HOST grep -q Ubuntu /etc/issue && break
done

-- server_ip.sh --
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
echo export ESERVER_IP=$(grep "^$1\s" pod_ps | cut -f 4) > env
echo export HOST=$($EDEN eve ip) >> env

-- run_client.sh --
. ./env

echo {{template "ssh"}}$HOST "curl $ESERVER_IP"
until {{template "ssh"}}$HOST "curl $ESERVER_IP" | grep Welcome; do sleep 3; done

-- eden-config.yml --
{{/* Test's config. file */}}
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}
